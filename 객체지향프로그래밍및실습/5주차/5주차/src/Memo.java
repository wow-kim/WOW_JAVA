
public class Memo {

	// 다형성
	// 추상화 : 필요한 것만 남겨놓는 것. 추상화 과정이 없다면 사소한 것도 신경 써야 합니다. 꼭 하나의 모델만 나노은 것은 아닙니다.
	// 매개변수와 인수
	// 메소드 중복정의(메소드 오버로딩), 같은 이름의 메소드가 여러 개 존재할 수 있다.
	//  하지만 각각의 메소드가 가지고 있는 매개 변수(파라미터)는 달라야 합니다.
	// 생성자 : 초기화하는 일을 합니다.(메소드), 클래스 이름과 같고 return 값이 없다. 파라미터는 있을 수도 있고 없을 수도 있다.
	// 기본 생성자 : 생성자를 선언하지 않고 호출하면 바디가 빈 생성자를 만들어 줍니다. (필드는 0, 참조변수는 Null, Boolean은 False로)
	//  오류를 예방하기 위함
	// private : 다른 클래스에서 접근을 못함, package : 같은 패키지 안에서만 접근 가능, private : 외부 패키지에서도 접근 가능
	// this : 자기 자신 객체를 가리키는 참조변수

}